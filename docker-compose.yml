version: '3.8'
services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: $SQL_PASSWORD
      POSTGRES_USER: $SQL_USER
      POSTGRES_DB: $SQL_DATABASE
      PYTHONUNBUFFERED: 1
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    image: postgres
    container_name: innotter_postgres
    environment:
      POSTGRES_PASSWORD: $SQL_PASSWORD
      POSTGRES_USER: $SQL_USER
      POSTGRES_DB: $SQL_DATABASE
      PGDATA: /home/postgres/data
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
    ports:
      - "5050:80"
    restart: unless-stopped

  celery:
    build: .
    container_name: celery
    restart: on-failure
    command: celery -A innotter worker -l INFO
    tty: true
    stdin_open: true
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
        CELERY_BROKER_URL: $CELERY_BROKER_URL
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    restart: on-failure
    hostname: rabbitmq
    env_file:
      - ./.env
    environment:
      RABBITMQ_ERLANG_COOKIE: $RABBITMQ_ERLANG_COOKIE
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      RABBITMQ_DEFAULT_VHOST: $RABBITMQ_DEFAULT_VHOST
    ports:
      - "5672:5672"
      - "15672:15672"

  fastapi:
    container_name: fastapi
    build:
      context: ./microservice
      dockerfile: Dockerfile
    env_file:
      - ./.env
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    environment:
      PYTHONUNBUFFERED: 1

  react:
    build:
      context: ./innotter-front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"

volumes:
  postgres:
